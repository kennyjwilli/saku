{#_:system-utils.log/config          #_:DEFAULT

 ;; ------------------------------
 ;; Schemas
 ;; ------------------------------

 :saku.system.datalevin/schema          :init

 :system-lacinia.graphql/schema         {:resource "schemas/graphql.edn"}


 ;; ;; ------------------------------
 ;; ;; Environment Vars
 ;; ;; ------------------------------

 ;; [:env/google-nlp-key :system-utils.env/var]
 ;; {:var :google-nlp-key}

 ;; [:env/openai-api-key :system-utils.env/var]
 ;; {:var :openai-api-key}


 ;; ;; ------------------------------
 ;; ;; External dependencies (i.e. DB)
 ;; ;; ------------------------------

 :saku.system.datalevin/conn
 {:url 'DB_URL
  :schema #ig/ref :saku.system.datalevin/schema
  :seed #ig/ref :saku.system.seed/seed}

 :saku.system.seed/seed
 :init


 ;; ------------------------------
 ;; API Stuff
 ;; ------------------------------

 :system-lacinia.graphql/log-interceptor :init

 :system-lacinia.graphql/correlation-id-interceptor :init

 :system-lacinia.graphql/error-handling-interceptor :init

 :saku.system.graphql-resolvers/resolvers
 {:db-conn #ig/ref :saku.system.datalevin/conn
  ;; Make sure to pass the versioning system in the specialized env config
  :version 'VERSION_SYSTEM}

 :saku.system.graphql-resolvers/entity-resolvers
 {;;:db-conn #ig/ref :system-datahike.db/conn
  }

 :system-lacinia.graphql/compiled-schema
 {:sdl-schema #ig/ref :system-lacinia.graphql/schema
  :resolvers #ig/ref :saku.system.graphql-resolvers/resolvers
  :entity-resolvers #ig/ref :saku.system.graphql-resolvers/entity-resolvers
  }

 :system-lacinia.graphql/interceptors
 {:compiled-schema #ig/ref :system-lacinia.graphql/compiled-schema
  :interceptors [#ig/ref :system-lacinia.graphql/log-interceptor
                 #ig/ref :system-lacinia.graphql/correlation-id-interceptor
                 #ig/ref :system-lacinia.graphql/error-handling-interceptor]}

 :system-lacinia.graphql/routes
 {:graphiql? true
  :interceptors #ig/ref :system-lacinia.graphql/interceptors}

 :system-lacinia.graphql/service
 {:graphiql? true
  :compiled-schema #ig/ref :system-lacinia.graphql/compiled-schema
  :routes #ig/ref :system-lacinia.graphql/routes}

 :system-lacinia.http/server
 {:base-service #ig/ref :system-lacinia.graphql/service
  :port 'PORT}}
